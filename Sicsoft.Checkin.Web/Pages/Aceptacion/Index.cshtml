@page
@model FacturaElectronica.Pages.Aceptacion.IndexModel
@{
    ViewData["Title"] = "Compras";
}
@using System.Globalization;


@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@inject IHttpContextAccessor httpContextAccessor
@using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}

@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
}

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        function TableExport() {
            var tableID = 'tablaexcel';
            var filename = 'Compras';
            var downloadLink;
            var dataType = 'application/vnd.ms-excel';
            var tableSelect = document.getElementById(tableID);
            var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

            // Specify file name
            filename = filename ? filename + '.xls' : 'excel_data.xls';

            // Create download link element
            downloadLink = document.createElement("a");

            document.body.appendChild(downloadLink);

            if (navigator.msSaveOrOpenBlob) {
                var blob = new Blob(['ufeff', tableHTML], {
                    type: dataType
                });
                navigator.msSaveOrOpenBlob(blob, filename);
            } else {
                // Create a link to the file
                downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

                // Setting the file name
                downloadLink.download = filename;

                //triggering the function
                downloadLink.click();
            }
        }
        function descargarxml(str, cons) {
            var encodedStringAtoB = str;

            // Decode the String
            var decodedStringAtoB = atob(encodedStringAtoB);

            var xmltext = decodedStringAtoB;

            var filename = cons + ".xml";
            var pom = document.createElement('a');
            var bb = new Blob([xmltext], { type: 'text/plain' });

            pom.setAttribute('href', window.URL.createObjectURL(bb));
            pom.setAttribute('download', filename);

            pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');
            pom.draggable = true;
            pom.classList.add('dragout');

            pom.click();


        }



    </script>
}

<div class="page-title">
    <div class="title_left">
        <h3>Compras Electrónicas</h3>
    </div>
    <div class="title_right">
        <div class="col-md-5 col-sm-5   form-group pull-right top_search">
            <div class="input-group">
                @if (!string.IsNullOrEmpty(Roles.Where(a => a == "20").FirstOrDefault()))
                {
                    <a asp-page="AceptacionMasiva" class="btn btn-primary" style="font-size: 12px;" title="Aceptacion Masiva">  Aceptacion Masiva</a>

                }
            </div>
        </div>
    </div>

</div>
<div class="clearfix"></div>



<div class="row">
    <div class="col-md-12 col-sm-12  ">

        <div class="x_panel">
            <div class="x_title">
                Filtros:
            </div>
            <div class="x_content">
                <form method="get">
                    <div class="ibox-content">
                        <div class="row">

                            <div class="col-sm-3">
                                <label class="col-form-label">Fecha Inicial:</label>
                                <input class="form-control" id="FecInicial" type="date" asp-for="filtro.FechaInicial" />
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Fecha Final:</label>
                                <input class="form-control" id="FecFinal" type="date" asp-for="filtro.FechaFinal" />
                            </div>
                            <div class="col-md-3">
                                <label class="col-form-label">Estado:</label>
                                <div class="form-group row">

                                    <div class="col-sm-10">
                                        <select asp-for="filtro.Estado" id="idTipo" class="form-control  mi-selector">
                                            <option value="NULL" selected>-Sin Estado-</option>



                                            <option value="0">Sin Procesar</option>
                                            <option value="1">Procesadas</option>


                                        </select>
                                    </div>


                                </div>
                            </div>

                            <div class="col-md-3">
                                <label class="col-form-label">Usuario Aceptador:</label>
                                <div class="form-group row">

                                    <div class="col-sm-10">
                                        <select asp-for="filtro.Codigo1" class="form-control  mi-selector">
                                            <option value="0" selected>-Seleccione-</option>

                                            @foreach (var item in Model.Usuarios)
                                            {
                                                <option value="@item.id">@item.id - @item.Nombre</option>

                                            }


                                        </select>
                                    </div>


                                </div>
                            </div>

                            <div class="col-sm-12">
                                <br />
                            </div>
                            <div class="col-md-3">
                                <label class="col-form-label">Moneda:</label>
                                <div class="form-group row">

                                    <div class="col-sm-10">
                                        <select asp-for="filtro.CodMoneda" id="idTipo" class="form-control  mi-selector">
                                            <option value="CRC">CRC</option>
                                            <option value="USD">USD</option>


                                        </select>
                                    </div>


                                </div>
                            </div>
                            <div class="col-sm-12">
                                <br />
                            </div>
                            <div class="col-sm-6" style="text-align: right;">
                            </div>
                            <div class="col-sm-6" style="text-align: right;">
                                <button title="Exportar a Excel" type="button" class="btn btn-success" onclick="javascript: TableExport();">EXCEL</button>

                                <button title="Buscar" type="submit" class="btn btn btn-primary"> <i class="fa fa-search"></i></button>

                            </div>






                        </div>
                    </div>
                </form>
            </div>

        </div>



        <div class="x_panel">

            <div class="x_content">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card-box table-responsive">
                            <table id="datatable" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>

                                        <th>Consecutivo Hacienda</th>

                                        <th>Emisor</th>
                                        <th>Fecha</th>
                                        <th>Moneda</th>
                                        <th>Total Comprobante</th>
                                        <th>Total Impuestos</th>

                                        <th>Estado Receptor</th>
                                        <th>Detalle</th>

                                        <th>Estado</th>
                                        <th>Aceptador</th>

                                        <th>Acción</th>

                                    </tr>
                                </thead>


                                <tbody>
                                    @foreach (var item in Model.Bandejas.Where(a => a.XmlConfirmacion != null).ToList())
                                    {
                                        <tr>
                                            <td>@item.NumeroConsecutivo</td>
                                            <td>@item.IdEmisor - @item.NombreEmisor</td>


                                            <td> @((item.FechaIngreso).ToString("dd/MM/yyyy"))  </td>

                                            <td>@item.CodigoMoneda  </td>

                                            <td>@Math.Round(item.TotalComprobante.Value, 2).ToString("N", formato)  </td>
                                            <td>@Math.Round(item.Impuesto, 2).ToString("N", formato)  </td>

                                            <td>
                                                @switch (item.tipo)
                                                {
                                                    case "05":
                                                        {
                                                            <span>Aceptado Totalmente</span>
                                                            break;
                                                        }
                                                    case "06":
                                                        {
                                                            <span>Aceptado Parcialmente</span>
                                                            break;
                                                        }
                                                    case "07":
                                                        {
                                                            <span>Rechazado Totalmente</span>
                                                            break;
                                                        }
                                                    default:
                                                        {
                                                            <span>Sin Procesar</span>
                                                            break;
                                                        }
                                                }

                                            </td>
                                            <td>@(item.DetalleMensaje == null ? "" : item.DetalleMensaje)</td>

                                            <td>@(string.IsNullOrEmpty(item.RespuestaHacienda) ? "" : item.RespuestaHacienda == "1" ? "Procesado" : item.RespuestaHacienda)  </td>

                                            <td>@(Model.Usuarios.Where(a => a.id == item.idAceptador).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == item.idAceptador).FirstOrDefault().Nombre) </td>

                                            <td>
                                                @if (item.Procesado != "1")
                                                {

                                                    <a asp-page="./Editar" asp-route-id="@item.Id" title="Visualizar" class="btn btn-warning"> Aceptar/Rechazar</a>
                                                }
                                                &nbsp;

                                                @if (!string.IsNullOrEmpty(item.XMLRespuesta))
                                                {
                                                    <button class="btn btn-primary pull-right" style="margin-right: 5px;" onclick="javascript: descargarxml('@item.XMLRespuesta', '@item.NumeroConsecutivo')"><i class="fa fa-download"></i> Descargar XML Firmado</button>
                                                }

                                                &nbsp;


                                                @if (!string.IsNullOrEmpty(item.XmlConfirmacion))
                                                {
                                                    <a class="btn btn-danger pull-right" style="margin-right: 5px;" href="@Model.Parametros.urlWebApi@item.XmlConfirmacion" target="_blank">PDF </a>
                                                }

                                            </td>

                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6"></div>
            <div class="col-sm-6">
                <div class="x_panel">

                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    <table id="datatable" class="table table-striped table-bordered" style="width:100%">
                                        <thead>
                                            <tr>

                                                <th>Descripción</th>
                                                <th>Total</th>



                                            </tr>
                                        </thead>


                                        <tbody>


                                            <tr>
                                                <td>Impuesto I.V.A 1</td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.IVA1)).ToString("N",formato)</td>
                                            </tr>
                                            <tr>
                                                <td>Impuesto I.V.A 2</td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.IVA2)).ToString("N", formato)</td>
                                            </tr>
                                            <tr>
                                                <td>Impuesto I.V.A 4</td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.IVA4)).ToString("N", formato)</td>
                                            </tr>
                                            <tr>
                                                <td>Impuesto I.V.A 8</td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.IVA8)).ToString("N", formato)</td>
                                            </tr>
                                            <tr>
                                                <td>Impuesto I.V.A 13</td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.IVA13)).ToString("N", formato)</td>
                                            </tr>

                                            <tr>
                                                <td><b>Total Impuestos</b></td>
                                                <td>@Math.Round(Model.Bandejas.Where(a => a.XmlConfirmacion != null).Sum(a => a.Impuesto)).ToString("N", formato)</td>
                                            </tr>





                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Excel-->

<table id="tablaexcel" class="table table-striped table-bordered" style="width:100%" hidden>
    <thead>
        <tr>

            <th>Consecutivo Hacienda</th>
            <th>Cedula</th>
            <th>Nombre Emisor</th>
            <th>Fecha</th>
            <th>Moneda</th>
            <th>Total Comprobante</th>
            <th>I.V.A 1</th>
            <th>I.V.A 2</th>
            <th>I.V.A 4</th>
            <th>I.V.A 8</th>
            <th>I.V.A 13</th>

            <th>Total Impuestos</th>

            <th>Estado Receptor</th>
            <th>Detalle</th>

            <th>Estado</th>
            <th>Aceptador</th>



        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model.Bandejas)
        {
            <tr>
                <td>'@item.NumeroConsecutivo.ToString() </td>
                @if(@item.IdEmisor.Length > 10)
                {
                    <td> '@item.IdEmisor</td>

                }else
                {
                    <td> @item.IdEmisor</td>

                }
                <td>@item.NombreEmisor</td>


                <td>@DateTime.Parse(item.FechaEmision).ToString("dd/MM/yyyy")  </td>

                <td>@item.CodigoMoneda  </td>

                <td>@Math.Round(item.TotalComprobante.Value, 2).ToString("N", formato)  </td>
                <td>@Math.Round(item.IVA1, 2).ToString("N", formato)  </td>
                <td>@Math.Round(item.IVA2, 2).ToString("N", formato)  </td>
                <td>@Math.Round(item.IVA4, 2).ToString("N", formato)  </td>
                <td>@Math.Round(item.IVA8, 2).ToString("N", formato)  </td>
                <td>@Math.Round(item.IVA13, 2).ToString("N", formato)  </td>

                <td>@Math.Round(item.Impuesto, 2).ToString("N", formato)  </td>

                <td>
                    @switch (item.tipo)
                    {
                        case "05":
                            {
                                <span>Aceptado Totalmente</span>
                                break;
                            }
                        case "06":
                            {
                                <span>Aceptado Parcialmente</span>
                                break;
                            }
                        case "07":
                            {
                                <span>Rechazado Totalmente</span>
                                break;
                            }
                        default:
                            {
                                <span>Sin Procesar</span>
                                break;
                            }
                    }

                </td>
                <td>@(item.DetalleMensaje == null ? "" : item.DetalleMensaje)</td>

                <td>@(string.IsNullOrEmpty(item.RespuestaHacienda) ? "" : item.RespuestaHacienda == "1" ? "Procesado" : item.RespuestaHacienda)  </td>
                <td>@(Model.Usuarios.Where(a => a.id == item.idAceptador).FirstOrDefault() == null ? "" : Model.Usuarios.Where(a => a.id == item.idAceptador).FirstOrDefault().Nombre) </td>




            </tr>
        }

    </tbody>
</table>